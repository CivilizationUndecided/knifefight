@namespace Facepunch.UI
@inherits Panel
@attribute [StyleSheet]

@if ( !Player.IsValid() ) return;

<root class="hud with-deadzone @(Player.InBuyMenu ? "active" : "")">
    @foreach (WeaponSlot slot in Enum.GetValues(typeof(WeaponSlot)))
    {
        var weapons = WeaponData.All.Where(W => W.IsPurchasable && W.Slot == slot);
        if (weapons.Count() < 1)
            continue;

        <div class="section">
            <label class="title">@slot</label>
            <div class="options">
            @foreach (WeaponData weaponData in weapons)
            {
                <div class="button @(@Inventory.HasWeapon( weaponData ) ? "owned" : "unowned") @(@CanAfford( weaponData ) ? "" : "unaffordable" )" onclick=@(() => BuyWeapon( weaponData ))>
                    @if ( !string.IsNullOrEmpty( weaponData.Icon ) )
                    {
                        <div class="gunicon" style="background-image:url(@weaponData.Icon);" />
                    }

                    <label>@weaponData.Name</label>
                    <label class="price">$@weaponData.Price.ToString("N0")</label>
                </div>
            }
            </div>
        </div>
    }
</root>

@code
{
    public PlayerInventory Inventory => Player.Inventory;
    public PlayerController Player => GameUtils.Viewer;

    private void BuyWeapon( WeaponData weaponData )
    {
        if ( !CanAfford( weaponData ) )
            return;

        Inventory.BuyWeapon( weaponData.ResourceId );
    }

    private bool CanAfford( WeaponData weaponData )
    {
        return Inventory.Balance >= weaponData.Price;
    }

    protected override int BuildHash()
    {
        return !Player.IsValid() ? 0 : HashCode.Combine( Inventory.Weapons.Count(), Player.InBuyMenu );
    }
}
