@using System;
@using Sandbox.UI;

@namespace Facepunch.UI
@inherits Panel

<root class="row @(IsLocal ? "local" : "") @(IsDead ? "dead" : "") with-px-lg with-py">
    <span class="col stat-small">
        <label class="small">@(Connection.Ping.CeilToInt())</label>
    </span>

    <span class="col stat-small">
        @if( Player.Inventory.HasBomb && Player.IsFriendly( GameUtils.LocalPlayer ) )
        {
            <Icon File="/ui/bomb.png" size="24"></Icon>
        }

        @if( Player.Inventory.HasDefuseKit && Player.IsFriendly( GameUtils.LocalPlayer ) )
        {
            <Icon File="/ui/defusekit.png" size="24"></Icon>
        }
    </span>

    <span class="col playername">
        <img class="avatar" src="avatar:@(Connection.SteamId)" />
        <label>
            @Player.GetPlayerName()
        </label>
    </span>

    @if ( Player.IsFriendly( GameUtils.LocalPlayer ) )
    {
        <label class="col stat-large">$@(Player.Inventory.Balance.ToString( "N0" )</label>
    }
    else
    {
        <label class="col stat-large"></label>
    }

    <label class="col stat">@(Score.Score)</label>
    <label class="col stat">@(Score.Kills)</label>
    <label class="col stat">@(Score.Deaths)</label>

    <label class="col stat">@(KillDeathRatio.ToString("0.00"))</label>
</root>

@code {
    public PlayerController Player { get; set; }
    private Connection Connection => Player.Network.OwnerConnection;
    private PlayerScore Score => Player.Components.Get<PlayerScore>();

    private bool IsLocal => Player.IsLocallyControlled;
    private bool IsDead => Player.HealthComponent.State != LifeState.Alive;
    private float KillDeathRatio => (float)Score.Kills / (float)Score.Deaths.Clamp( 1, int.MaxValue );

    protected override int BuildHash()
    {
        return HashCode.Combine(KillDeathRatio, Score.Score, Score.Kills, Score.Deaths, Connection, IsLocal, IsDead);
    }
}