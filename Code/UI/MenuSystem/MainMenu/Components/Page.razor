@using Sandbox.UI
@using Sandbox.Razor
@using Sandbox.Utility
@inherits Panel
@namespace Facepunch.UI
@attribute [StyleSheet]

<root>
    <div class="header inset-top">
        <div class="row">
            <div class="row inset inset-top grow">
                <div class="logo">
                    <img src="/ui/teams/operators_logo_banner.png" />
                </div>

                <div class="align-center" style="margin-left: 16px;">
                    @if (Header != null)
                    {
                        @Header
                    }
                </div>
            </div>
        </div>
    </div>

    @if (SubHeader != null)
    {
        <div class="subheader inset">
            <div class="row with-padding">
                @SubHeader
            </div>
        </div>
    }

    <div class="body grow">
        @if ( Body != null )
        {
            @Body
        }
    </div>


    <div class="footer" style="background-color: rgba( black, 0.25 ); padding-bottom: 16px;">
         <div class="row grow inset">
            <VerticalDivider Gradient=@true />
         </div>

        <div class="column inset grow with-padding with-gap">
            <div class="row">
                <div class="row grow with-gap">

                    @if ( !NoHomeButton )
                    {
                        <a class="button standard">
                            <i>home</i>
                        </a>
                    }


                    @if (Footer != null)
                    {
                        @Footer
                    }

                    <div class="grow">
                    </div>

                    <div class="party-deck layout with-gap">
                        @if ( Party is null )
                        {
                            @if ( !NoSocial )
                            {
                                <div class="button standard" onclick=@(() => InviteOverlay())>
                                    <i>person_add_alt</i>
                                </div>
                            }
                        }
                        else
                        {
                            @if (!NoSocial)
                            {
                                <div class="button standard" onclick=@(() => InviteOverlay())>
                                    <i>person_add_alt</i>
                                </div>
                            }

                            @foreach ( var member in Party.Members )
                            {
                                @{
                                    var isMe = member.IsMe;
                                    var isMeStr = isMe ? "is-me" : "";
                                }

                                @if ( isMe )
                                    continue;

                                <div class="button standard">
                                    <i class="@isMeStr">visibility</i>
                                    <label class="@isMeStr">@member.Name</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</root>

@code
{
    public RenderFragment Header { get; set; }
    public RenderFragment SubHeader { get; set; }
    public RenderFragment Body { get; set; }
    public RenderFragment Footer { get; set; }

    public bool NoHomeButton { get; set; }
    public bool NoSocial { get; set; }

    public PartyRoom Party => PartyRoom.Current;

    public void LeaveParty()
    {
        Party?.Leave();
    }

    public void CreateParty()
    {
        PartyRoom.Create( 4, "My Party", true );
    }

    public void InviteOverlay()
    {
        CreateParty();

        if ( Game.IsEditor )
        {
            Facepunch.UI.Toast.Instance.Show( "Menu Overlays not supported in the editor" );
        }

        Game.Overlay.ShowFriendsList( new Sandbox.Modals.FriendsListModalOptions()
		{
			 ShowOfflineMembers = false,
		} );
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Party, Party?.Members.Count() );
    }

    public void Quit()
    {
        Game.Close();
    }
}