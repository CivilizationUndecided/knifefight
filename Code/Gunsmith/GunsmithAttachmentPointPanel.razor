@using Facepunch.UI
@using Sandbox
@using Sandbox.UI

@namespace Facepunch.Gunsmith
@inherits Panel

<root class="hc1">
    @if ( IsViewingOptions )
    {
        @foreach ( var part in GunsmithPart.Categories[Category].Where( x => x.Supports( Weapon.Resource ) ).ToList() )
        {
            @{
                var isCurrent = part == AttachmentPoint.CurrentPart;
            }

            <div class="entry layout grow center @(isCurrent ? "current" : "")" style="justify-content: center; align-items: center;" onclick=@(() => SetPart( part ) )>
                <label class="white micro">@part.Name</label>
            </div>
        }

        <div class="entry layout grow center" style="justify-content: center; align-items: center;" onclick=@(() => ClearThis() )>
            <label class="white micro">None</label>
        </div>
    }
    else
    {
        <div class="entry layout grow center" style="justify-content: center; align-items: center;" onclick=@(() => Toggle() )>
            @if ( AttachmentPoint.CurrentPart is not null )
            {
                <label class="white micro">@AttachmentPoint.CurrentPart.Name</label>
            }
            else
            {
                <label class="white micro">@Category</label>
            }
        </div>
    }
</root>

@code
{
    public GunsmithAttachmentPoint AttachmentPoint { get; set; }
    public GunsmithWeapon Weapon { get; set; }
    public GunsmithPartType Category { get; set; }

    public bool IsViewingOptions { get; set; }

    public GunsmithAttachmentPointPanel()
    {
        BindClass( "open", () => IsViewingOptions );
    }

    public override void Tick()
    {
        var screenPos = Scene.Camera.PointToScreenNormal( AttachmentPoint.Transform.Position );

        // Hacky hack hack, but temporary.
        if ( Category == GunsmithPartType.Optic )
            screenPos = screenPos.WithX( screenPos.x - 0.05f ).WithY( screenPos.y - 0.25f );
        if ( Category == GunsmithPartType.Charm )
            screenPos = screenPos.WithX( screenPos.x ).WithY( screenPos.y + 0.05f );

        Style.Left = Length.Fraction( screenPos.x );
        Style.Top = Length.Fraction( screenPos.y );
    }

    private void ClearThis()
    {
        AttachmentPoint.SetPart( null );
        IsViewingOptions = false;
    }

    private void Toggle()
    {
        IsViewingOptions ^= true;
    }

    private void SetPart( GunsmithPart part )
    {
        AttachmentPoint.SetPart( part );
        IsViewingOptions = false;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( IsViewingOptions );
    }
}